/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
       LinkedList<TreeNode> queue = new LinkedList<>();
			LinkedList<TreeNode> stack = new LinkedList<>();
       List<List<Integer>> list=new ArrayList<>();
        if(root==null)
            return list;
        list.add(new ArrayList<>());
            
            int count=0;
			queue.addLast(root);

			while (!queue.isEmpty()) {
				TreeNode rn = queue.removeFirst();

				if(count%2==0)
				{
				if(rn.left!=null)
					stack.addFirst(rn.left);
				if(rn.right!=null)
					stack.addFirst(rn.right);
				}
				else
				{
					if(rn.right!=null)
						stack.addFirst(rn.right);
					if(rn.left!=null)
						stack.addFirst(rn.left);
				}
				
				list.get(count).add(rn.val);

				if (queue.isEmpty()) {
                    
                    if(!stack.isEmpty())
                        list.add(new ArrayList<>());
                    
					LinkedList<TreeNode> temp = queue;
					queue = stack;
					stack = temp;
					count++;
				}

			}
        
        return list;
    }
}