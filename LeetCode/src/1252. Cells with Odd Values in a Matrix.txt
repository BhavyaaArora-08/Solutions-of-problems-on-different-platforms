class Solution {
    public int oddCells(int n, int m, int[][] indices) {
        
        int[][] mat=new int[n][m];
        
        for(int i=0;i<indices.length;i++)
        {
            int ri=indices[i][0];
            int ci=indices[i][1];
            
            for(int c=0;c<m;c++)
                mat[ri][c]++;
            
            for(int r=0;r<n;r++)
                mat[r][ci]++;
        }
        
        int count=0;
        
        for(int i=0;i<mat.length;i++)
        {
            for(int j=0;j<mat[0].length;j++)
            {
                if(mat[i][j]%2!=0)
                    count++;
            }
        }
        
        
        return count;
    }
}

////////
public class Solution {
	public int oddCells(int n, int m, int[][] indices) {
		boolean r[] = new boolean[n];
		boolean c[] = new boolean[m];
		int row_odd = 0, col_odd = 0;	
		
		for (int i = 0; i < indices.length; i++){
			r[indices[i][0]] = !r[indices[i][0]];
			c[indices[i][1]] = !c[indices[i][1]];
			row_odd += r[indices[i][0]] ? 1 : -1;
			col_odd += c[indices[i][1]] ? 1 : -1;
		}
		
		return (row_odd*m) + (col_odd*n) - (2*row_odd*col_odd);
	}
}